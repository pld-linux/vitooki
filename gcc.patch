--- vitooki/src/ESInfo.hpp~	2006-05-15 13:41:39.000000000 +0300
+++ vitooki/src/ESInfo.hpp	2010-08-05 16:22:27.061490204 +0300
@@ -57,6 +57,7 @@
 #ifdef __cplusplus
 extern "C" {
 #include "avformat.h"
+#include <string.h>
 }
 #endif
 #endif
--- vitooki/src/IO.hpp~	2006-03-17 19:14:52.000000000 +0200
+++ vitooki/src/IO.hpp	2010-08-05 16:23:06.220993247 +0300
@@ -46,6 +46,7 @@
 
 #include "global.hpp"
 #include <assert.h>
+#include <string.h>
 #ifdef ISOMP4
 #include "ISOMovies.h"
 #endif
--- vitooki/src/global.hpp~	2006-01-20 17:37:17.000000000 +0200
+++ vitooki/src/global.hpp	2010-08-05 16:23:43.827655498 +0300
@@ -57,6 +57,7 @@
 #include <list>
 #include <map>
 #include <string>
+#include <string.h>
 #include "debug.hpp"
 using namespace std;
 
--- vitooki/src/VThread.hpp~	2005-08-10 10:04:12.000000000 +0300
+++ vitooki/src/VThread.hpp	2010-08-05 16:25:02.835355151 +0300
@@ -50,6 +50,7 @@
 
 #include "global.hpp"
 #include <assert.h>
+#include <limits.h>
 #ifndef WINCE
 #include <pthread.h>
 #endif //wince
--- vitooki/src/cache/MetaObject.cpp~	2010-08-05 16:56:34.000000000 +0300
+++ vitooki/src/cache/MetaObject.cpp	2010-08-05 16:56:35.880850044 +0300
@@ -315,7 +315,7 @@
 	}
 	FILE* fp=fopen(cfg,"wb");
 	bool retVal=false;
-	char* pCfg=strrchr(cfg,'.');
+	char* pCfg=(char *)strrchr(cfg,'.');
 	char *temp = new char[1024];
 	if(pCfg) {
 		strncpy(temp,cfg,pCfg-cfg-1); //do not copy the dot
--- vitooki/src/io/IOCreator.cpp~	2006-11-10 16:49:37.000000000 +0200
+++ vitooki/src/io/IOCreator.cpp	2010-08-05 16:58:40.561820148 +0300
@@ -61,7 +61,7 @@
 	//       url==input -> create an MP4IO
 	//       not equal and this.input exists -> create MPGStreamIO
 	
-	char* tmp=NULL;
+	const char* tmp=NULL;
 	const char* input;
 	ContainerInfo* vo=es->getContainerInfo();
 	
--- vitooki/src/metadata/MP21.cpp~	2010-08-05 17:19:08.000000000 +0300
+++ vitooki/src/metadata/MP21.cpp	2010-08-05 17:19:11.000656119 +0300
@@ -129,8 +129,8 @@
 
 	TerminalCapabilities* tc=new TerminalCapabilities();
 	// lazy  parsing
-	char* pBuffer=strstr(mp21string, "<Display");
-	char* pBufferEnd=NULL;
+	const char* pBuffer=strstr(mp21string, "<Display");
+	const char* pBufferEnd=NULL;
 	if(pBuffer) {
 		pBufferEnd=strstr(pBuffer, "</Display>");
 	}
@@ -177,8 +177,8 @@
 		pBufferEnd=strstr(mp21string,"</DeviceProperty>");
 
 	if(pBuffer && pBufferEnd) {
-		char* pStorage=strstr(pBuffer,"<Storage>");
-		char* pStorageEnd=strstr(pBuffer,"</Storage>");
+		const char* pStorage=strstr(pBuffer,"<Storage>");
+		const char* pStorageEnd=strstr(pBuffer,"</Storage>");
 		if(pStorage && pStorageEnd) {
 			float result;
 			if(findFloatAfterToken(pStorage,pStorageEnd,"Size",&result))
@@ -201,7 +201,7 @@
 
 bool MP21::findIntAfterToken(const char* input, const char* inputEnd,
 							 const char* token, int* result) {
-	char* temp=strstr(input,token);
+	const char* temp=strstr(input,token);
 	if(!temp )
 		return false;
 	if(temp>inputEnd)
@@ -224,7 +224,7 @@
 
 bool MP21::findFloatAfterToken(const char* input, const char* inputEnd,
 							 const char* token, float* result) {
-	char* temp=strstr(input,token);
+	const char* temp=strstr(input,token);
 	if(!temp )
 		return false;
 	if(temp>inputEnd)
@@ -248,7 +248,7 @@
 
 bool MP21::findStringAfterToken(const char* input, const char* inputEnd,
 								const char* token, char* result) {
-	char* temp=strstr(input,token);
+	const char* temp=strstr(input,token);
 	if(!temp)
 		return false;
 	if(temp>inputEnd)
@@ -264,7 +264,7 @@
 	if(*temp=='"') {
 		temp++;
 		// find the closing '"' in the same line
-		char* pEnd=temp;
+		const char* pEnd=temp;
 		while(*pEnd!='"' && *pEnd!='\r' && *pEnd!='\n')
 			pEnd++;
 		if(*pEnd=='"' && pEnd<=inputEnd) {
--- vitooki/src/metadata/MP7Time.cpp~	2010-08-05 17:20:42.000000000 +0300
+++ vitooki/src/metadata/MP7Time.cpp	2010-08-05 17:20:46.494618852 +0300
@@ -101,7 +101,7 @@
 {
   resetTimePoint();
   uint val;
-  char *pos = strchr(mp7Value, 'T');
+  const char *pos = strchr(mp7Value, 'T');
   /* date part */
   if (!pos)
     pos = strchr(mp7Value, '\0');
@@ -116,7 +116,7 @@
     return true;
   pos++;			// advance to character after 'T'
   /* time zone */
-  char *postz = strchr(pos, '+');
+  const char *postz = strchr(pos, '+');
   if (!postz)
     postz = strchr(pos, '-');
   if (postz) {
@@ -131,7 +131,7 @@
     return true;
   /* parse time part */
   int unit = 3600;		// time unit (in seconds) of next field
-  char *num = pos;
+  const char *num = pos;
   for (; pos <= postz; pos++) {
     if (*pos == ':' || *pos == 'F' || *pos == '+'
 	|| *pos == '-' || *pos == '\0') {
--- vitooki/src/net/RTSP.cpp~	2010-08-05 17:22:41.000000000 +0300
+++ vitooki/src/net/RTSP.cpp	2010-08-05 17:22:43.341675892 +0300
@@ -360,7 +360,7 @@
 												const char *remaining, int* sessionId, double* startTime, double* endTime, double* maxPrefetch) 
 {
 	buffer[0]=0;
-	char *tmp=NULL;
+	const char *tmp=NULL;
 	assert(remaining && sessionId && startTime && endTime && maxPrefetch);
 	// parse remaining to get session key
 	*sessionId=this->extractSessionKeyFromCMD(remaining);
@@ -587,7 +587,7 @@
   
   bool error = false;
   const char* filen=fileName->getPath();
-  char *l2 = strchr(filen, '=');
+  const char *l2 = strchr(filen, '=');
   if (l2) {
 		l2++;
 		error = (1 != sscanf(l2, "%i", esId));
@@ -794,7 +794,7 @@
 /** returns INVALID_SESSIONID if no sessionid was found */
 int RTSP::extractSessionKeyFromCMD(const char* remaining)
 {
-	char *tmp=NULL;
+	const char *tmp=NULL;
 	int key;
   if ( ((tmp=strstr(remaining, "Session:")) == NULL) ||
 			 (sscanf(tmp,"%*s %i",&key) != 1) ) {
@@ -1129,7 +1129,7 @@
 	temp=strstr(media,"config=");
 	if(temp!=NULL && temp<endOfMedia) {
 		temp+=strlen("config=");
-		char* tmp2=strstr(temp,"\r");
+		const char* tmp2=strstr(temp,"\r");
 		if(tmp2==NULL)
 			tmp2=strstr(temp,"\n");
 
--- vitooki/apps/muviserver/shared/SemiGlobals.hpp~	2005-03-15 19:55:46.000000000 +0200
+++ vitooki/apps/muviserver/shared/SemiGlobals.hpp	2010-08-05 18:57:24.813469340 +0300
@@ -57,6 +57,7 @@
 #include <vector>
 #include <map>
 #include <math.h>
+#include <string.h>
 
 #ifdef WIN32
 #include <winsock2.h>
--- vitooki/apps/muviserver/shared/Movie.hpp~	2005-03-15 19:55:46.000000000 +0200
+++ vitooki/apps/muviserver/shared/Movie.hpp	2010-08-05 18:58:33.086726145 +0300
@@ -57,9 +57,7 @@
 
 using namespace std;
 
-#ifdef WIN32
 typedef unsigned int uint;
-#endif
 
 /**
  * This class is used to store a movie.
--- vitooki/apps/muviserver/shared/MovieList.cpp~	2005-01-13 23:53:24.000000000 +0200
+++ vitooki/apps/muviserver/shared/MovieList.cpp	2010-08-05 18:59:10.880888763 +0300
@@ -48,6 +48,7 @@
 
 
 #include "MovieList.hpp"
+#include <stdlib.h>
 
 
 using namespace std;
--- vitooki/apps/muviserver/shared/Profile.hpp~	2005-03-15 19:55:46.000000000 +0200
+++ vitooki/apps/muviserver/shared/Profile.hpp	2010-08-05 18:59:37.883386363 +0300
@@ -52,9 +52,7 @@
 
 #include <string>
 
-#ifdef WIN32
 typedef unsigned int uint;
-#endif
 
 
 /** maximum length for the name of a profile */
--- vitooki/apps/muviserver/shared/Profile.cpp~	2010-08-05 19:03:20.000000000 +0300
+++ vitooki/apps/muviserver/shared/Profile.cpp	2010-08-05 19:03:27.300042152 +0300
@@ -48,6 +48,8 @@
 
 
 #include "Profile.hpp"
+#include <string.h>
+#include <stdlib.h>
 
 /***********************************************************************/
 Profile::Profile (uint profileId, uint uidCount, uint *userIds, char profilename[],
--- vitooki/apps/muviserver/shared/ProfileList.cpp~	2005-01-07 00:02:03.000000000 +0200
+++ vitooki/apps/muviserver/shared/ProfileList.cpp	2010-08-05 19:04:36.738147745 +0300
@@ -48,6 +48,7 @@
 
 
 #include "ProfileList.hpp"
+#include <stdlib.h>
 
 using namespace std;
 
--- vitooki/apps/muviserver/shared/SemiGlobals.cpp~	2005-05-10 12:22:36.000000000 +0300
+++ vitooki/apps/muviserver/shared/SemiGlobals.cpp	2010-08-05 19:05:17.373352180 +0300
@@ -48,6 +48,7 @@
 
 
 #include "SemiGlobals.hpp"
+#include <stdlib.h>
 
 
 
--- vitooki/apps/muviserver/shared/User.cpp~	2005-01-07 00:02:03.000000000 +0200
+++ vitooki/apps/muviserver/shared/User.cpp	2010-08-05 19:05:49.456682163 +0300
@@ -48,6 +48,7 @@
 
 
 #include "User.hpp"
+#include <stdlib.h>
 
 /***********************************************************************/
 User::User(uint userId, char username[], char password[])
--- vitooki/apps/muviserver/shared/UserList.cpp~	2005-01-07 00:02:03.000000000 +0200
+++ vitooki/apps/muviserver/shared/UserList.cpp	2010-08-05 19:06:18.333345946 +0300
@@ -48,6 +48,7 @@
 
 
 #include "UserList.hpp"
+#include <stdlib.h>
 
 using namespace std;
 
--- vitooki/apps/muviserver/semiserver/readusers/MovieListRequest.cpp~	2005-01-07 00:26:36.000000000 +0200
+++ vitooki/apps/muviserver/semiserver/readusers/MovieListRequest.cpp	2010-08-05 19:06:59.070124533 +0300
@@ -48,6 +48,7 @@
 
 
 #include "MovieListRequest.hpp"
+#include <stdlib.h>
 
 /***********************************************************************/
 MovieListRequest::MovieListRequest()
--- vitooki/apps/muviserver/semiserver/readusers/readusers.cpp~	2005-01-21 01:23:30.000000000 +0200
+++ vitooki/apps/muviserver/semiserver/readusers/readusers.cpp	2010-08-05 19:07:31.583339828 +0300
@@ -48,6 +48,7 @@
 
 
 #include "readusers.hpp"
+#include <stdlib.h>
 
 /***********************************************************************/
 void createUserSelection()
--- vitooki/apps/muviserver/semiserver/embedded/embedded.cpp~	2005-01-07 00:21:02.000000000 +0200
+++ vitooki/apps/muviserver/semiserver/embedded/embedded.cpp	2010-08-05 19:08:17.180834052 +0300
@@ -48,6 +48,7 @@
 
 
 #include "embedded.hpp"
+#include <stdlib.h>
 
 
 /***********************************************************************/
--- vitooki/apps/muviserver/shared/CGIParser.hpp~	2005-12-09 22:04:51.000000000 +0200
+++ vitooki/apps/muviserver/shared/CGIParser.hpp	2010-08-06 00:45:18.082562388 +0300
@@ -78,7 +78,7 @@
     void parseData(string data, const char sep1, const char sep2);
     /** Splits the passed string into serval parts,
         seperated through passed seperator. */
-    list<string> splitData(string data, const char sep);
+    list<string> splitData(const string& data, const char sep);
     /** @return the decimal value of a hexadecimal character. */
     int hex2dec(char c);
     /** Decodes the HTML FORM data string.
--- vitooki/apps/muviserver/shared/CGIParser.cpp~	2010-08-06 00:48:59.000000000 +0300
+++ vitooki/apps/muviserver/shared/CGIParser.cpp	2010-08-06 00:49:02.005248076 +0300
@@ -52,8 +52,8 @@
 #include <qstring.h>
 #endif
 
-#ifdef WIN32
 #include <algorithm>
+#ifdef WIN32
 typedef unsigned int uint;
 #endif
 
@@ -90,16 +90,16 @@
 }
 
 /***********************************************************************/
-list<string> CGIParser::splitData(string data, const char sep)
+list<string> CGIParser::splitData(const string& data, const char sep)
 {
   //list of elements
   list<string> elems;
 
 #ifndef WIN32  //back_inserters cause C2039
 
-  string::iterator pos1 = data.begin();
+  string::const_iterator pos1 = data.begin();
   //find returns an iterator to the end, if nothing is found
-  string::iterator pos2 = find(pos1, data.end(), sep);
+  string::const_iterator pos2 = find(pos1, data.end(), sep);
   while (pos2 != data.end())
   {
     string field;
--- vitooki/apps/muvitrans/AudioJob.cpp~	2005-03-26 22:17:13.000000000 +0200
+++ vitooki/apps/muvitrans/AudioJob.cpp	2010-08-09 12:12:13.627938559 +0300
@@ -183,11 +183,11 @@
 	assert(initString);
 	this->checkReferences();
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 		 
 	if(next == strstr(next, AJOB_START))
 	{
-		next=(const char*)next+strlen(AJOB_START);
+		next=next+strlen(AJOB_START);
 	}
 	else
 	{
@@ -196,7 +196,7 @@
 	}
 	if(1==sscanf(next, JOBID, &this->jobID))
 	{
-		next = (const char*)strchr(next, '\n')+1;
+		next = strchr(next, '\n')+1;
 	}
 	else
 	{
@@ -207,7 +207,7 @@
 	{
 		if(NULL!=(end=strchr(next, '\n')))
 		{
-			next=(const char*)next+strlen(NAME_SCAN);
+			next=next+strlen(NAME_SCAN);
 			memset(this->name, 0, MAX_STR_LEN);
 			if(NULL==memcpy(this->name, next, end-next))
 			{
@@ -216,7 +216,7 @@
 	        	}
 	        	else
 	        	{
-				next = (const char*)end+1;
+				next = end+1;
 			}
 		}
 		else
@@ -235,7 +235,7 @@
 		if(NULL!=(end=strchr(next, '\n')))
 	        {
 		        memset(this->outFile, 0, MAX_STR_LEN);
-		        next=(const char*)next+strlen(FILENAME_SCAN);
+		        next=next+strlen(FILENAME_SCAN);
 			if(NULL==memcpy(this->outFile, next, end-next))
 		        {
 				dprintf_err("\033[31mAudioJob::fromString\033[0m\n");
@@ -243,7 +243,7 @@
 			}
 			else
 			{
-				next = (const char*)end+1;
+				next = end+1;
 			}
 		}
 		else
@@ -271,7 +271,7 @@
 		if(NULL!=(end=strchr(next, '\n')))
 		{
 		memset(this->language, 0, MAX_STR_LEN);
-		next=(const char*)next+strlen(LANGUAGE_SCAN);
+		next=next+strlen(LANGUAGE_SCAN);
 			if(NULL==memcpy(this->language, next, end-next))
 			{
 				free(format);
@@ -280,7 +280,7 @@
 			}
 			else
 			{
-				next = (const char*)end+1;
+				next = end+1;
 				if(0 == memcmp(next, AJOB_END, strlen(AJOB_END)))
 			        {
 				        free(format);
--- vitooki/apps/muvitrans/JobList.cpp~	2004-12-03 13:06:01.000000000 +0200
+++ vitooki/apps/muvitrans/JobList.cpp	2010-08-09 12:14:23.991561425 +0300
@@ -326,7 +326,7 @@
 	dprintf_full("\033[32m>> JobList::fromStringJobs\033[0m\n");
 	assert(initString);
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	if(next == strstr(next, JL_START))
 	{
 		next=(const char*)next+strlen(JL_START);
@@ -417,7 +417,7 @@
 	Job* job;
 	JobList* new_jl = this;
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	u32 id = 0;
 	if(next == strstr(next, JL_START))
 	{
--- vitooki/apps/muvitrans/Project.cpp~	2004-12-03 13:06:02.000000000 +0200
+++ vitooki/apps/muvitrans/Project.cpp	2010-08-09 12:16:00.798840996 +0300
@@ -78,7 +78,7 @@
 	{
 		fread( (void*) buf, 1, MAX_FILE_LEN, file);
 		const char* next = buf;
-		char* end = NULL;
+		const char* end = NULL;
 		if(next==strstr(next, PROJECT_START))
 		{
 			next=(const char*)next + strlen(PROJECT_START);
--- vitooki/apps/muvitrans/Source.cpp~	2005-11-17 18:55:40.000000000 +0200
+++ vitooki/apps/muvitrans/Source.cpp	2010-08-09 12:16:48.324586326 +0300
@@ -197,7 +197,7 @@
 	dprintf_full("\033[32mSource::fromString\033[0m\n");
 	assert(initString);
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	char* name = (char*)malloc(MAX_STR_LEN);
 	memset(name, 0, MAX_STR_LEN);
 	Source* source = NULL;
--- vitooki/apps/muvitrans/SourceList.cpp~	2004-12-03 13:06:02.000000000 +0200
+++ vitooki/apps/muvitrans/SourceList.cpp	2010-08-09 12:17:23.548531299 +0300
@@ -313,7 +313,7 @@
 	dprintf_full("\033[32mSourceList::fromString\033[0m\n");
 	assert(initString);
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	Source* src = NULL;
 	if(next == strstr(next, SL_START))
 	{
--- vitooki/apps/muvitrans/SystemFile.cpp~	2004-07-26 18:47:19.000000000 +0300
+++ vitooki/apps/muvitrans/SystemFile.cpp	2010-08-09 12:17:54.741653239 +0300
@@ -209,7 +209,7 @@
 	dprintf_full("\033[32mSystemFile::fromString\033[0m\n");
 	assert(initString);
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	if(next==strstr(next, SYSFILE_START))
 	{
 		next=(const char*)next+strlen(SYSFILE_START);
--- vitooki/apps/muvitrans/SystemFileList.cpp~	2004-07-23 19:43:35.000000000 +0300
+++ vitooki/apps/muvitrans/SystemFileList.cpp	2010-08-09 12:18:31.755816044 +0300
@@ -255,7 +255,7 @@
 	dprintf_full("\033[32mSystemFileList::fromString\033[0m\n");
 	assert(initString);
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	if(next == strstr(next, SYSFILELIST_START))
 	{
 		next=(const char*)next+strlen(SYSFILELIST_START);
--- vitooki/apps/muvitrans/VideoJob.cpp~	2005-03-26 22:17:13.000000000 +0200
+++ vitooki/apps/muvitrans/VideoJob.cpp	2010-08-09 12:19:15.438002918 +0300
@@ -334,7 +334,7 @@
 	assert(initString);
 	//this->checkReferences();
 	const char* next = initString;
-	char* end = NULL;
+	const char* end = NULL;
 	if( next == strstr(next, VJOB_START))
 	{
 		next = (const char*) next+strlen(VJOB_START);
